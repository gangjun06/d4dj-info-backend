generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String
  password      String
  isAdmin       Boolean  @default(false)
  emailVerified Boolean  @default(false)
  createdAt     DateTime @default(now())
}

model VerifyEmail {
  email    String   @unique
  code     String
  createAt DateTime @default(now())
}

model Resource {
  name       String   @unique
  lastUpdate DateTime @default(now())
}

model Unit {
  id                   Int         @id
  name                 String
  canTraining          Boolean
  summary              String
  mainColorCode        String
  subColorCode         String
  shortName            String
  initDeckCharacterIds Int[]
  Characters           Character[]
}

model Character {
  id               Int    @id
  fullName         String
  firstName        String
  firstNameEnglish String
  unitPrimaryKey   Int
  fullNameEnglish  String
  colorCode        String

  unit Unit   @relation(fields: [unitPrimaryKey], references: [id])
  Card Card[]
}

enum Attribute {
  STREET
  PARTY
  CUTE
  COOL
  ELEGANT
}

model Skill {
  id                 Int    @id
  minRecoveryValue   Int
  maxRecoveryValue   Int
  comboSupportCount  Int
  scoreUpRate        Int
  minSeconds         Float
  maxSeconds         Float
  perfectScoreUpRate Int
  Card               Card[]
}

model Card {
  id                        Int       @id
  rarity                    Int
  cardName                  String
  attribute                 Attribute
  characterPrimaryKey       Int
  skillParameterPrimaryKey  Int
  skillName                 String
  maxParameters             Int[]
  gachaMessage              String
  clothCardId               Int
  debutOrder                Int
  cardIllustHeadDistanceY   Float[]
  cardIllustCenterDistanceX Float[]
  startDate                 DateTime
  endDate                   DateTime

  character Character @relation(fields: [characterPrimaryKey], references: [id])
  skill     Skill     @relation(fields: [skillParameterPrimaryKey], references: [id])
}
