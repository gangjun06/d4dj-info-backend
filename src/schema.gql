# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  name: String!
  email: String!
  emailVerified: Boolean!
  isAdmin: Boolean!
  createdAt: Timestamp!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type UserWithToken {
  user: User!
  token: String!
}

type Unit {
  id: Float!
  name: String!
  canTraining: Boolean!
  summary: String!
  mainColorCode: String!
  subColorCode: String!
  shortName: String!
  characters: [Character!]
}

type Character {
  id: Float!
  fullName: String!
  firstName: String!
  firstNameEnglish: String!
  unit: Unit
  fullNameEnglish: String!
  colorCode: String!
  card: [Card!]
}

type Skill {
  id: Float!
  minRecoveryValue: Float!
  maxRecoveryValue: Float!
  comboSupportCount: Float!
  scoreUpRate: Float!
  minSeconds: Float!
  maxSeconds: Float!
  perfectScoreUpRate: Float!
}

type Card {
  id: Float!
  rarity: Float!
  cardName: String!
  attrubute: String!
  character: Character!
  skill: Skill!
  skillName: String!
  maxParameters: [Float!]!
  gachaMessage: String!
  clothCardId: Float!
  debutOrder: Float!
  cardIllustHeadDistanceY: [Float!]!
  cardIllustCenterDistanceX: [Float!]!
  startDate: Timestamp!
  endDate: Timestamp!
}

type Resource {
  name: String!
  lastUpdate: Timestamp!
  resources: [Resource!]!
}

type Query {
  me: User!
  unit(page: PaginationInput, filter: UnitFilterInput): [Unit!]!
  character(page: PaginationInput, filter: CharacterFilterInput): [Character!]!
  card(page: PaginationInput, filter: CardFilterInput): [Card!]!
}

input PaginationInput {
  skip: Float = 0
  take: Float = 20
}

input UnitFilterInput {
  id: Float = -1
}

input CharacterFilterInput {
  id: Float = -1
}

input CardFilterInput {
  id: Float = -1
  attribute: String
}

type Mutation {
  signUp(data: UserSignUpInput!): UserWithToken!
  emailVerifyReq(email: String!): Boolean!
  emailVerify(data: EmailVerifyInput!): Boolean!
  login(data: SignInInput!): UserWithToken!
  parseResource(data: ParseResourceInput!): Boolean!
}

input UserSignUpInput {
  email: String!
  name: String!
  password: String!
}

input EmailVerifyInput {
  email: String!
  code: String!
}

input SignInInput {
  email: String!
  password: String!
}

input ParseResourceInput {
  target: ResourceType!
}

enum ResourceType {
  Music
  Character
}
